1.需求分析

# 项目需求如下
'''

对象角色:
    管理员对象、学生对象、老师对象、课程对象、学校对象

    - 至少需要创建5个类.

要求:
    # 管理员模块 ---》 注册、登录、创建学校、创建课程、创建老师
　　1. 创建北京、上海 2 所学校  ---》 创建学校 （学校名称与学校地址）

    学校课程---》 [创建课程1, 创建课程2, ...]
　　2. 创建linux , python13 , go 3个课程 ， linux\py在北京开，go在上海开 ---> 创建课程（课程名称，绑定学校）

　　3. 管理员创建学校 ，课程  ，老师  ---》 创建老师， （老师名字，老师密码）

　　4. 学校包含学校名称，地址等属性

    # 学生模块 ---》 注册、登录、选择学校、选择课程、查看成绩
　　5. 学生注册登录后，可以选择学校，选择课程，查看成绩

　　6. 学生只能选择一所学校，可以从校区中选择多门课程，课程绑定给学生。
        [创建课程1, 创建课程2, ...]  <----- 学生选择学校中的一门课程， 学生课程列表[课程1, 课程2]

    # 老师模块 ---》 登录、查看教授课程、选择教授课程、查看课程下的学生、修改学生成绩
　　7. 老师登录后，可以查看教授课程，选择想要教授的课程，查看课程下的学生，修改学生成绩等



视图和功能：

    - 总视图: src.py

        让用户先进入总视图，然后再通过选择的编号 进入相应的视图。

        - 学生视图
                1、注册
                2、登录
                3、选择校区
                4、选择课程
                5、查看成绩

        - 老师视图
                1、登录
                2、查看教授课程
                3、选择教授课程
                4、查看课程下学生
                5、修改学生成绩

        - 管理视图，创建讲师， 创建班级，创建课程
                1、注册
                2、登录
                3、创建学校
                4、创建老师
                5、创建课程
'''


2.项目的架构设计
    - 三层架构
        - 用户视图层
            - 接收用户输入的内容
            - 接收接口层返回的数据，并展示给用户

        - 接口层
            - 业务逻辑的处理
            - 将处理完的结果返回的用户视图层 ↑
            - 产生的数据: ↓

        - 数据处理层
            - 数据的存取
            - 存: 拿到接口层产生的数据进行保存
            - 查: 将数据返回给接口层  ↑



3.分任务开发
4.测试
5.上线



两条路:
    1.下周一考试，今天不讲完
        - 考试 管理员

    2.下周一自习，下周二考试。
        - 考试  整个选课系统


注意: 写完所有功能，务必删除所有文件后，重新测试，以免报错!



